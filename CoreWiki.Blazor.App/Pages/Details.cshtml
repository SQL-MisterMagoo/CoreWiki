@page "/"
@page "/{Slug}"
@page "/Details/{Slug}"

@inject IStringLocalizer<DetailsModel> Localizer
@inject MediatR.IMediator mediator
@inject AutoMapper.IMapper mapper

<div class="card card-header">
	<div class="container">
		<div class="row">
			<h2 class="col-xl-7 col-lg-8 col-md-12">@Model.Article.Topic</h2>
			<div class="col-xl-5 col-lg-4 col-md-12">
				<div class="container">
					<div class="row">
						<div class="col-xl-12 small text-muted">@Localizer["Published"]: <span data-value="@Model.Article.Published" class="timeStampValue"> @Model.Article.Published</span></div>

					</div>
					<div class="row">
						<div class="col-xl-4 small"><span class="text-muted">@Localizer["ViewCount"]: </span><span class="badge badge-primary" data-value="@Model.Article.ViewCount"> @Model.Article.ViewCount</span></div>
						<div class="col-xl-8 small"><span class="text-muted">@Localizer["ReadingTime"]: </span><span class="badge badge-primary duration" data-duration="@Model.Article.Content.CalculateReadTime().TotalMilliseconds"></span></div>
					</div>
					<div class="row">
						<div class="col-xl-12 small"><a asp-page="History" asp-route-slug="@Model.Article.Slug">@string.Format(Localizer["HistoryFormat"], Model.Article.Version)</a></div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<br />
<div class="container">
	<markdown markdown="Article.Content" />

	<div>
		<a href="/Edit/@Model.Article.Slug" asp-policy="@PolicyConstants.CanEditArticles" class="btn btn-outline-info">@Localizer["Edit"]</a>

		@if (Model.Article.Slug != UrlHelpers.HomePageSlug)
		{
			<a href="~/" class="btn btn-secondary">@Localizer["GoHome"]</a>
		}
	</div>

	<partial name="_CommentsPartial" model="Model" />
</div>

@functions{
  DetailsModel Model ;
  Dictionary<string, object> ViewData = new Dictionary<string, object>();

  [Parameter] string Slug { get; set; }

  protected override async Task OnInitAsync()
  {
	  Model = new DetailsModel(mediator, mapper);

	  Model.Article = new ViewModels.ArticleDetails();
	  var title = Localizer["Details"];
	  if (string.IsNullOrWhiteSpace(Slug))
		  Slug = UrlHelpers.HomePageSlug;
	  await Model.OnGetAsync(Slug);
	  if (!string.IsNullOrEmpty(Model.Article.Topic))
	  {
		  ViewData["Title"] = Model.Article.Topic;
	  }
	  else
	  {
		  ViewData["Title"] = title;
	  }
  }

}
